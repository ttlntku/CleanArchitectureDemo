// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220914073731_MigrationVer2")]
    partial class MigrationVer2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Core.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<short>("Role")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tbl_employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            CreatedBy = "KIEU",
                            DateOfBirth = new DateTime(1999, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kieungothekieu@gmail.com",
                            FirstName = "Kieu",
                            LastName = "Ngo",
                            Password = "kieu1",
                            PhoneNumber = "0965117209",
                            Role = (short)201,
                            UpdatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "KIEU"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            CreatedBy = "KIEU",
                            DateOfBirth = new DateTime(1999, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "williamshakespeare@gmail.com",
                            FirstName = "William",
                            LastName = "Shakespeare",
                            Password = "william1",
                            PhoneNumber = "0965117209",
                            Role = (short)202,
                            UpdatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "KIEU"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            CreatedBy = "KIEU",
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "louisvuitton@gmail.com",
                            FirstName = "Louis",
                            LastName = "Vuitton",
                            Password = "louis1",
                            PhoneNumber = "0965117209",
                            Role = (short)202,
                            UpdatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "KIEU"
                        });
                });

            modelBuilder.Entity("Core.Entities.FactoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("FactoryAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FactoryName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tbl_factory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            CreatedBy = "KIEU",
                            FactoryAddress = "Next Eight",
                            FactoryName = "Sam Sung",
                            UpdatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "KIEU"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            CreatedBy = "KIEU",
                            FactoryAddress = "America Dinh",
                            FactoryName = "Apple",
                            UpdatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "KIEU"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            CreatedBy = "KIEU",
                            FactoryAddress = "Park Ninh",
                            FactoryName = "Amazon",
                            UpdatedAt = new DateTime(2022, 9, 14, 2, 37, 31, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "KIEU"
                        });
                });

            modelBuilder.Entity("EmployeeEntityFactoryEntity", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("FactoriesId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "FactoriesId");

                    b.HasIndex("FactoriesId");

                    b.ToTable("EmployeeEntityFactoryEntity");
                });

            modelBuilder.Entity("EmployeeEntityFactoryEntity", b =>
                {
                    b.HasOne("Core.Entities.EmployeeEntity", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.FactoryEntity", null)
                        .WithMany()
                        .HasForeignKey("FactoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
